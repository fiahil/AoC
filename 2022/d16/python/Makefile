# This file is managed by devopsify > update strategy : replace

SHELL := /bin/bash
.PHONY: help version bump setup start lint test

VERSION	= v$(shell cat pyproject.toml | grep "^version = \"*\"" | cut -d'"' -f2)

help:			## Show this help
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z0-9_-]+:.*?## / {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST)

version:		## Display the current version
	@echo "${VERSION}"

bump: 		# Bump the version
	. venv/bin/activate && poetry version patch

setup:		## Setup a dev environment
	# Reset venv
	@rm -rf venv
	# Create new python environment
	python3.9 -m venv venv
	. venv/bin/activate \
		&& pip install --upgrade pip wheel \
		&& pip install --upgrade poetry \
		&& poetry install --no-ansi

start:		## Start the application
	# TODO: Add your start command here

lint:			## Lint the code
	. venv/bin/activate && black --check .
	. venv/bin/activate && flake8 .
	. venv/bin/activate && pylint .

test:			## Run tests
	. venv/bin/activate \
		&& python -m pytest tests

##
## Targets
##

requirements.txt: pyproject.toml	## Recipe for refreshing requirements.txt from pyproject.toml
	@echo "# THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT." > requirements.txt
	@echo "./" >> requirements.txt
	poetry export --without-hashes >> requirements.txt
